{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from \"../settings\";\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithRedirect(provider);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport default firebase;","map":{"version":3,"sources":["/home/node/app/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithRedirect","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEAD,QAAQ,CAACE,aAAT,CAAuBD,cAAvB;AAEA,OAAO,MAAME,IAAI,GAAGH,QAAQ,CAACG,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGJ,QAAQ,CAACI,SAAT,EAAlB;AAEP,MAAMC,QAAQ,GAAG,IAAIL,QAAQ,CAACG,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,kBAAL,CAAwBL,QAAxB,CAA/B;AAEP,OAAO,MAAMM,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGV,SAAS,CAACW,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA0BT,QAAhC;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMT,OAAO,CAACU,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAQD,KATD,CASE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AAED;AAEF;;AAED,SAAOd,OAAP;AAED,CA5BM;AA+BP,eAAed,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from \"../settings\";\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithRedirect(provider);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email  } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      \n          });\n    \n    } catch (error) {\n      console.log('error creating user', error.message);\n    \n    }\n  \n  }\n\n  return userRef;\n\n};\n\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}